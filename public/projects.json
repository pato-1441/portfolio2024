[
  {
    "id": "1",
    "imageSrc": "./alquileres3.webp",
    "title": "Alquileres Temporales",
    "stack": ["C#", ".NET", "Winforms"],
    "desc": "Aplicación de escritorio diseñada para gestionar eficientemente reservas de propiedades y alquileres temporales. La aplicación incluye gráficos estadísticos que brindan información detallada sobre el porcentaje de reservas basado en el tipo de alojamiento y el número de reservas categorizado por la cantidad de huéspedes.\n\nCaracterísticas clave que incluye: Listado, adición, modificación y eliminación de propiedades. Consulta, impresión, importación y exportación de reservas.\n\nLa persistencia del sistema se garantiza mediante el uso de serialización binaria. Apartado de búsqueda de alojamiento que permiten a los usuarios aplicar filtros y características específicas.",
    "deploy": null,
    "source": "https://github.com/pato-1441/alquileresTemporales"
  },
  {
    "id": "2",
    "imageSrc": "./CCDMenu.webp",
    "title": "Caballeros Dragones Calabozos",
    "stack": ["C#", ".NET", "Winforms"],
    "desc": "Aplicación de juego de mesa conocido como Caballeros Calabozos y Dragones, está desarrollado en su totalidad con C# .NET y utiliza las ventanas de Winforms para generar la interfaz gráfica.\n\nEl juego posee tres dificultades, una versión demo y un seguimiento del ranking de puntos local. Además del desarrollo de la lógica del juego en sí, le puse un poco de vida realizando algunos diseños básicos para darle un perfil acorde al estilo del proyecto.",
    "deploy": null,
    "source": "https://github.com/pato-1441/caballerosCalabozosDragones"
  },
  {
    "id": "3",
    "imageSrc": "./tiro2.webp",
    "title": "Torneo Tiro con Flecha",
    "stack": ["C#", ".NET", "Winforms"],
    "desc": "Proyecto realizado para asignatura de la universidad, la aplicación consiste en una plataforma eficiente para cargar y gestionar competidores en un torneo de clasificación de tiro con arco.\n\nLa aplicación informa la cantidad de competidores menores y mayores de 18 años al finalizar la carga inicial. En cada ronda, se muestra el nombre de cada jugador según el orden de inscripción y al finalizar la misma, se proporciona información detallada sobre el ganador, segundo y tercer puesto, incluyendo nombre, puntaje y cantidad de centros.",
    "deploy": null,
    "source": "https://github.com/pato-1441/facultad/tree/main/laboratorioI/TrabajoPracticoTresDos"
  },
  {
    "id": "4",
    "imageSrc": "./marvel.webp",
    "title": "Marvel Wiki",
    "stack": ["React.js", "SCSS", "HTML"],
    "desc": "Trata de un sitio web que muestra los personajes, comics y series de Marvel. Para lograr esto, nos conectamos a la API oficial y recuperamos los datos.\n\nEn el sitio podemos navegar entre las diferentes categorías, podemos navegar a través de la paginación de las categorías, visualizamos las cards de 'personajes', 'comics' y 'series', obtenemos las descripciones y detalles de cada una de las producciones, así como también, se implementa un carrousel con los últimos lanzamientos. Contiene las siguientes integraciones: - Material UI - Router-Dom - Sass - Swiper - Loaders - API de Marvel.",
    "deploy": "https://marvel-project-iota.vercel.app/",
    "source": "https://github.com/TimoteoGambella/Marvel-Project-Vercel"
  },
  {
    "id": "5",
    "imageSrc": "./alquileresWeb.webp",
    "title": "Alquileres Temporales Web",
    "stack": ["HTML", "Tailwind"],
    "desc": "Para mejorar la experiencia del usuario al utilizar la aplicacion de Alquileres Temporales, desarrollé un sitio web que proporciona información detallada sobre el programa, sus casos de uso y su funcionamiento.\n\nAdemas de una sección donde podemos encontrar mas información acerca de quienes realizamos la aplicación.",
    "deploy": "https://alquilerestemporarios.netlify.app/",
    "source": "https://github.com/pato-1441/alquileresTemporales"
  },
  {
    "id": "6",
    "imageSrc": "./bornozShows.webp",
    "title": "Bornoz Shows",
    "stack": ["React.js", "Firebase", "Tailwind", "DaisyUI", "Vite"],
    "desc": "Bornoz Shows es una SPA desarrollada con React que te permite comprar entradas para diferentes espectáculos.\n\nPuedes filtrar las entradas por categorías, verificar su disponibilidad y generar órdenes de compra instantáneas. La aplicación utiliza Firestore, una base de datos de documentos NoSQL en la nube, para almacenar y recuperar datos. Además, Bornoz Shows utiliza Tailwind y daisyUI para diseñar la interfaz de usuario. La aplicación también utiliza Vite para compilar y construir el proyecto.\n\nEn cuanto a las características, Bornoz Shows se conecta a una base de datos en la nube Firestore, permite filtrar las entradas por categorías, posee enrutado dinámico, realiza validación de stock, genera órdenes instantáneas.",
    "deploy": "https://bornozshows.netlify.app/",
    "source": "https://github.com/pato-1441/bornozShows"
  },
  {
    "id": "7",
    "imageSrc": "./bornozFly.webp",
    "title": "Bornoz Fly",
    "stack": [
      "Node.js",
      "Nginx",
      "Express",
      "MongoDB",
      "Socket.IO",
      "Handlebars",
      "Tailwind",
      "DaisyUI"
    ],
    "desc": "Bornoz Fly es un proyecto de vuelos en línea construido con Node.js y Express. Permite explorar ofertas, buscar pasajes y comprar vuelos de manera fácil. Algunas tecnologías clave son Express para el desarrollo web, MongoDB y Mongoose para la base de datos, y bcrypt para la seguridad de contraseñas.\n\nTwilio y Nodemailer se utilizan para notificar a los usuarios por mensaje y correo electrónico, mientras que Passport garantiza la autenticación segura. La interfaz visual atractiva se crea con Tailwind CSS + daisyUI y animaciones con AOS. Nginx mejora el rendimiento y Pino brinda un registro detallado.\n\nPara mantener a los usuarios actualizados en tiempo real sobre disponibilidad y precios, se emplea Socket.IO. Bornoz Fly busca hacer que la búsqueda y reserva de vuelos en línea sean simples y seguras, ofreciendo una experiencia intuitiva respaldada por tecnologías modernas.",
    "source": "https://github.com/pato-1441/bornozFly"
  },
  {
    "id": "8",
    "imageSrc": "./bornozBank.webp",
    "title": "Bornoz Bank",
    "stack": ["Javascript", "HTML", "Tailwind", "DaisyUI"],
    "desc": "Bornoz Bank es un aplicacion al estilo 'Homebanking' simple desarrollada con Vanilla JavaScript. Ofrece funciones como registro de usuarios, acceso como invitado, retiros y depósitos de dinero, visualización detallada de movimientos, gestión de contactos (agregar y eliminar), y consulta de cotizaciones de monedas.\n\nLa aplicación utiliza Local Storage para almacenar información de la sesión, como lo son el usuario, sus contactos, sus movimientos. Sobre el diseño y lo visual se ha construido utilizando Tailwind CSS + daisyUI, y se han incorporado animaciones con la librería AOS para mejorar la experiencia del usuario.\n\nEste proyecto tiene como objetivo la práctica de Vanilla Javascript y proporcionar un entorno virtual fácil de usar para realizar operaciones bancarias esenciales con un diseño intuitivo y funciones clave.",
    "deploy": "https://bornozbank.netlify.app/index.html",
    "source": "https://github.com/pato-1441/bornozBank"
  },
  {
    "id": "9",
    "imageSrc": "./searchSynonyms.webp",
    "title": "Search Synonyms",
    "stack": ["React.js", "Typescript", "HTML", "Tailwind", "Vite"],
    "desc": "En este caso, se ha desarrollado una aplicación que utiliza React y TypeScript para ayudarnos a encontrar sinónimos de una palabra dada. La aplicación utiliza la API de Datamuse para obtener los resultados.\n\nDatamuse es un motor de búsqueda de palabras que permite a los desarrolladores encontrar palabras que cumplan con ciertas restricciones. La API de Datamuse es muy útil para aplicaciones que requieren autocompletado en campos de entrada de texto, juegos de palabras, aplicaciones de escritura asistida y mucho más.\n\nLa aplicación que se ha desarrollado utiliza React y TypeScript para crear una interfaz de usuario moderna y fácil de usar. Los usuarios pueden ingresar una palabra y la aplicación buscará sinónimos de esa palabra utilizando la API de Datamuse. Los resultados se muestran en la pantalla y el usuario puede seleccionar el sinónimo que mejor se adapte a sus necesidades.",
    "deploy": "https://searchsynonyms.netlify.app/",
    "source": "https://github.com/pato-1441/searchSynonyms"
  }
]
